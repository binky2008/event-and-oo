package demo.command.base;

import demo.infrastructure.LogUtil;
import demo.infrastructure.PersistentObject;


//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : EventFactoryvent&oo
//  @ File Name : EventFactory.java
//  @ Date : 2013/9/27
//  @ Author : bner
//
//

public class EventFactory {

	public static <T extends Event> T createEvent(Class<T> eventClass,
			PersistentObject caller) {
		T event = null;
		try {
			event = eventClass.newInstance();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}

		new EventTeam().addEvent(event);

		LogUtil.print(caller.getClass().getSimpleName() + "(" + caller.getId()
				+ ") Create " + eventClass.getName() + " Event.");

		return event;
	}

	public static <T extends Event> T createEvent(Class<T> eventClass,
			Event source, PersistentObject caller) {
		T event = null;
		try {
			event = eventClass.newInstance();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}
		event.setSource(source);
		source.getEventTeam().addEvent(event);

		LogUtil.print(caller.getClass().getSimpleName() + "(" + caller.getId()
				+ ") Create " + eventClass.getName() + " Event.");

		return event;
	}

	public static <T extends Event> T createEvent(Class<T> eventClass) {
		T event = null;
		try {
			event = eventClass.newInstance();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}

		new EventTeam().addEvent(event);

		LogUtil.print("Event " + eventClass.getName() + " Created.");

		return event;
	}

	public static <T extends Event> T createEvent(Class<T> eventClass,
			Event source) {
		T event = null;
		try {
			event = eventClass.newInstance();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		}
		event.setSource(source);
		source.getEventTeam().addEvent(event);

		LogUtil.print("Event " + eventClass.getName() + " Created.");

		return event;
	}
}
