package demo.command;

import java.util.ArrayList;
import java.util.List;

import demo.command.base.EventBus;
import demo.command.base.StateHandlerFactory;
import demo.command.domain.blog.Blog;
import demo.command.domain.blog.BlogPublishedEvent;
import demo.command.domain.blog.BlogSaver;
import demo.command.domain.feed.FeedCreatedEvent;
import demo.command.domain.feed.FeedSaver;
import demo.command.domain.feed.ViewFeedCreatedEvent;
import demo.command.domain.feed.ViewFeedSaver;
import demo.command.domain.tag.Tag;
import demo.command.domain.tag.TagRefObjectAddedEvent;
import demo.command.domain.tag.TagRefObjectSaver;
import demo.command.domain.tag.TagSaver;
import demo.command.domain.tag.TagStateUpdatedEvent;
import demo.command.domain.topic.Topic;
import demo.command.domain.user.User;
import demo.infrastructure.LogUtil;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Appvent&oo
//  @ File Name : App.java
//  @ Date : 2013/9/27
//  @ Author : bner
//
//

public class CommandTest {

	private User user1;
	private User user2;
	private User user3;
	private User user4;
	private User user5;
	private User user6;

	private Topic topic1;

	private Tag tag1;
	private Tag tag2;

	private Blog blog1;
	private Blog blog2;

	public CommandTest() throws Exception {

		EventBus.registHandler(BlogPublishedEvent.class, new BlogSaver());
		EventBus.registHandler(FeedCreatedEvent.class, new FeedSaver());
		EventBus.registHandler(ViewFeedCreatedEvent.class, new ViewFeedSaver());
		EventBus.registHandler(TagStateUpdatedEvent.class, new TagSaver());
		EventBus.registHandler(TagRefObjectAddedEvent.class,
				new TagRefObjectSaver());

		this.user1 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user1" });
		this.user2 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user2" });
		this.user3 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user3" });
		this.user4 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user4" });
		this.user5 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user5" });
		this.user6 = StateHandlerFactory.getInstance().createStateHandler(
				User.class, new Object[] { "user6" });

		this.topic1 = StateHandlerFactory.getInstance().createStateHandler(
				Topic.class, new Object[] { "topic1" });

		this.tag1 = StateHandlerFactory.getInstance().createStateHandler(
				Tag.class, new Object[] { "tag1" });
		this.tag2 = StateHandlerFactory.getInstance().createStateHandler(
				Tag.class, new Object[] { "tag2" });

		user1.follow(user2);
		user3.follow(user2);
		user5.follow(user1);

		topic1.subscribed(user1);
		topic1.subscribed(user4);
	}

	public void createBlog1() throws Exception {

		blog1 = StateHandlerFactory.getInstance().createStateHandler(
				Blog.class,
				new Object[] { "blog1", user1.getId(), topic1,
						"this is blog1 content" });

	}

	public void createBlog2() throws Exception {

		blog2 = StateHandlerFactory.getInstance().createStateHandler(
				Blog.class,
				new Object[] { "blog2", user5.getId(), topic1,
						"this is blog2 content" });

	}

	public void addBlog1Tag() {
		List<Tag> tags = new ArrayList<Tag>();
		tags.add(tag1);
		tags.add(tag2);

		blog1.addTags(tags);
	}

	public void saveUser() throws Exception {
		user3.destory();
		user3.save();
	}

	public void reloadUser() throws CloneNotSupportedException {
		user3 = user3.clone();
	}

	public void replay() {
		user3.replay();
	}

	public void likeBlog1() {
		blog1.liked(user2.getId());
	}

	public void likeBlog2() {
		blog2.liked(user3.getId());
	}

	public void addUser2Tag() {
		List<Tag> tags = new ArrayList<Tag>();
		tags.add(tag1);

		user2.addTags(tags);
	}

	public void addUser6Tag() {
		List<Tag> tags = new ArrayList<Tag>();
		tags.add(tag1);

		user6.addTags(tags);
	}

	public void print() {

		LogUtil.print("---------------------");

		LogUtil.print(user1.toString());
		LogUtil.print(user2.toString());
		LogUtil.print(user3.toString());
		LogUtil.print(user4.toString());
		LogUtil.print(user5.toString());
		LogUtil.print(user6.toString());

		LogUtil.print(topic1.toString());

		LogUtil.print(blog1.toString());

		LogUtil.print(tag1.toString());
		LogUtil.print(tag2.toString());
	}

	public void end() throws Exception {
		StateHandlerFactory.getInstance().destory();
		EventBus.destory();
	}

	/**
	 * @param args
	 * @throws Exception
	 */
	public static void main(String[] args) throws Exception {

		CommandTest app = new CommandTest();

		app.createBlog1();

		app.addBlog1Tag();

		// app.saveUser();

		app.likeBlog1();

		// try {
		// Thread.currentThread().sleep(5000L);
		// } catch (InterruptedException e) {
		// e.printStackTrace();
		// }
		//
		// app.reloadUser();
		//
		// app.replay();

		app.addUser2Tag();

		app.addUser6Tag();

		app.createBlog2();

		app.likeBlog2();

		try {
			Thread.currentThread().sleep(8000L);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		app.print();

		app.end();

	}

}
